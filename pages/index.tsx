import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import styles2 from '../styles/index.module.css'
import {PartialsResponse} from '../pages/api/partials'

const Home: NextPage = () => {
  const [letters, setLettersState] = useState(new Array(5).fill(''))
  const [inPositionState, setInPositionState] = useState(new Array(5).fill(false))
  const [partialMatchState, setPartialMatchState] = useState([] as string[])
  const [loadingState, setLoadingState] = useState(false)
  useEffect(() => {
    if (letters.every(letter => letter === '')) return
    const controller = new AbortController()
    const f = async () => {
      try {
        setLoadingState(true)
        const partials = letters.map((letter, index) => ({letter, inPosition: inPositionState[index]}))          
        const result = await fetch('/api/partials', {          
          method: 'POST',        
          headers: {
            'Content-Type': 'application/json'
          },  
          body: JSON.stringify({ partials: partials }),
          signal: controller.signal
        })
        const json: PartialsResponse = await result.json()
        setPartialMatchState(json.partials)
      } finally {
        setLoadingState(false)
      }
    }
    f()
    return () => { controller.abort() }
  }, [letters, inPositionState])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          {
            new Array(5).fill(0).map((_, i) =>
              (
                <div key={i}>
                  <input type='text' maxLength={1}  className={styles2['letter-state-' + inPositionState[i]]} onChange={elem =>
                     setLettersState(letters.map((x, i2) => i === i2 ? elem.target.value : x))
                    } />
                  <input type='button' className={styles2['letter-state-' + !inPositionState[i]]}  onClick={() =>
                    setInPositionState(
                      inPositionState.map((x, i2) => i === i2 ? !x : x)
                    )
                  } />
                </div>
              )
            )
          }
        </div>

        <div>
          <h2>Partial matches {loadingState ? '(loading)' : ''} </h2>
          {
            partialMatchState.map(pm => <p key={pm}>{pm}</p>)
          }
        </div>
      </main>

      <footer className={styles.footer}>        
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
